<div class="chat-container">
  <div class="chat-header">
    <h1>シンプルチャット</h1>
  </div>
  <!-- メッセージ投稿フォーム -->
  <div class="chat-form">
    <%= form_with model: @message, url: messages_create_path, local: true do |form| %>
      <div class="form-group">
        <%= form.label :name, "名前" %>
        <%= form.text_field :name, placeholder: "太郎" %>
      </div>
      <div class="form-group">
        <%= form.label :content, "メッセージ" %>
        <%= form.text_area :content, placeholder: "こんにちは" %>
      </div>
      <%= form.submit "送信" %>
    <% end %>
  </div>
  <!-- メッセージ一覧 -->
  <div class="chat-messages">
    <div class="chat-history-header">
      <h2>チャット履歴</h2>
    </div>
    <div class="message">
      <% @messages.each do |message| %>
        <div class="message">
          <div class="message-author"><%= message.name %></div>
          <div class="message-content"><%= message.content %></div>
          <div class="message-time"><%= message.created_at.strftime("%H:%M") %></div>
        </div>
      <% end %>
    </div>
  </div>
</div>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        const form = document.querySelector('form');
        const chatChannel = window.chatChannel; // 後で定義

        form.addEventListener('submit', function(e) {
            e.preventDefault(); // ページリロードを防ぐ

            const nameInput = document.querySelector('[name="message[name]"]');
            const contentInput = document.querySelector('[name="message[content]"]');

            // ActionCable経由でメッセージ送信
            if (chatChannel && nameInput.value && contentInput.value) {
                chatChannel.speak(nameInput.value, contentInput.value);
                contentInput.value = ''; // メッセージ欄をクリア
            }
        });
    });
</script>



